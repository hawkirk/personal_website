---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import LinkButton from "@components/LinkButton.astro";
import getUniqueTags from "@utils/getUniqueTags";
import Socials from "@components/Socials.astro";
import { SOCIALS } from "@config";

import getSortedPosts from "@utils/getSortedPosts";
import Tag from "@components/Tag.astro";

const posts = await getCollection("blog");
const tags = getUniqueTags(posts);
const sortedPosts = getSortedPosts(posts);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);
const socialCount = SOCIALS.filter(social => social.active).length;
---

<Layout>
  <Header />
  <main id="main-content">

    <section id="hero">
      <p>
        AstroPaper is a minimal, responsive, accessible and SEO-friendly Astro
        blog theme. This theme follows best practices and provides accessibility
        out of the box. Light and dark mode are supported by default. Moreover,
        additional color schemes can also be configured.
      </p>
      {
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="social-links">Connect with me:</div>
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      recentPosts.length > 0 && (
        <>
          <section id="recent-posts">
            <h2>Latest</h2>
            <ul>
              {recentPosts.map(({ data, slug }, index) =>
                index < 1 && (
                  <Card
                    href={`/posts/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
              )}
            </ul>
          </section>
          {recentPosts.length > 1 && <Hr />}
        </>
      )
    }

    {
      tags.length > 0 && (
        <section id="topics">
          <h2>Topics</h2>
          <ul>
            {tags.map(({ tag }) => <Tag {tag} size="sm" />)}
          </ul>
        </section>
        <Hr />
      )
    }

    {
      sortedPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Writing</h2>
            <ul>
              {sortedPosts.sort((a, b) => new Date(b.data.pubDatetime).getTime() - new Date(a.data.pubDatetime).getTime()).map(({ data, slug }) => {
                const date = new Date(data.pubDatetime);
                const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;

                return (
                  <li>
                    <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>
                      <span><a href={`/posts/${slug}/`}>{data.title}</a></span>
                      <span style={{fontFamily: 'monospace', }}>{formattedDate}</span>
                    </div>
                  </li>
                );
              })}
            </ul>
          </section>
        </>
      )
    }

  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #topics,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #topics h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>
